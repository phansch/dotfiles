---
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Every day at 3am UTC
    - cron: '0 3 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  molecule-1:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Install packages
        run: poetry install
      - name: Test
        run: |
          cd ansible/roles/markdown_mimetype && poetry run molecule test && cd -
          cd ansible/roles/i3 && poetry run molecule test && cd -
          cd ansible/roles/rust && poetry run molecule test && cd -

      - uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}

  molecule-2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Install packages
        run: poetry install
      - name: Test
        run: |
          cd ansible/roles/github_cli && poetry run molecule test && cd -

      - uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}

  lints:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: |
          docker build -t dotfiles .

      - name: Test
        run: |
          docker run dotfiles /bin/bash -c "./setup -s && \
            ./test/vim && ./test/yaml && ./test/shellcheck"

      - uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}

  full-setup-test:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: |
          docker build -t dotfiles .

      - name: Test
        run: |
          # shellcheck disable=SC1091
          docker run dotfiles /bin/bash -c "./setup -a && ./test/ansible && ./test/i3"

      - uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
